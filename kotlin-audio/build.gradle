plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

def versionNumber = '2.0.0'

group = 'com.github.doublesymmetry'
version = versionNumber

android {
    compileSdk 34
    namespace = "com.doublesymmetry.kotlinaudio"
    defaultConfig {
        minSdk 21
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments["runnerBuilder"] = "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'io.coil-kt:coil:1.4.0'
    implementation 'androidx.media:media:1.7.0'
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
    implementation 'com.google.android.exoplayer:extension-mediasession:2.19.1'
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                artifact sourcesJar

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.github.doublesymmetry'
                artifactId = 'kotlin-audio'
                version = versionNumber
            }
//            // Creates a Maven publication called “debug”.
//            debug(MavenPublication) {
//                // Applies the component for the debug build variant.
//                from components.debug
//
//                groupId = 'com.github.doublesymmetry'
//                artifactId = 'kotlin-audio-debug'
//                version = versionNumber
//            }

        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}